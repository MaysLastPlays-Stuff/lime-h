name: CI
on: [push, pull_request]

env:
  HAXE_VERSION: 4.3.4

jobs:

  linux:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-dev libglu1-mesa-dev g++-multilib gcc-multilib libasound2-dev libx11-dev libxext-dev libxi-dev libxrandr-dev libxinerama-dev libmbedtls-dev libpng-dev libturbojpeg-dev libuv1-dev libvorbis-dev

      - uses: krdlab/setup-haxe@v1
        with:
          haxe-version: ${{ env.HAXE_VERSION }}

      - name: Set HAXEPATH
        run: |
          echo "HAXEPATH=$HAXE_STD_PATH/.." >> $GITHUB_ENV

      - name: Install Haxe dependencies
        run: |
          haxelib git hxcpp https://github.com/MaysLastPlays-Stuff/hxcpp-h --quiet
          haxelib install format --quiet
          haxelib git hxp https://github.com/openfl/hxp --quiet

      - name: Enable HXCPP compile cache
        run: |
          echo "HXCPP_COMPILE_CACHE=~/.hxcpp" >> $GITHUB_ENV

      - name: Rebuild Lime tools
        run: |
          haxelib dev lime ${{ github.workspace }}
          haxelib run lime rebuild tools -nocolor -verbose -nocffi
          haxelib run lime setup -alias -y -nocffi

      - name: Rebuild Lime (Linux)
        run: |
          lime rebuild linux -32 -release -nocolor -verbose -nocffi
          lime rebuild linux -64 -release -nocolor -verbose -nocffi

      - uses: actions/upload-artifact@v4
        with:
          name: Linux-NDLL
          path: |
            ndll/Linux/
            !**/.gitignore
          if-no-files-found: error

      - uses: actions/upload-artifact@v4
        with:
          name: Linux64-NDLL
          path: |
            ndll/Linux64/
            !**/.gitignore
          if-no-files-found: error


  macos:
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4
      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: ${{ env.HAXE_VERSION }}

      - name: Set HAXEPATH
        run: echo "HAXEPATH=$HAXE_STD_PATH/.." >> $GITHUB_ENV

      - name: Install Haxe dependencies
        run: |
          haxelib git hxcpp https://github.com/MaysLastPlays-Stuff/hxcpp-h --quiet
          haxelib install format --quiet
          haxelib git hxp https://github.com/openfl/hxp --quiet
      - name: Enable HXCPP compile cache
        run: echo "HXCPP_COMPILE_CACHE=~/.hxcpp" >> $GITHUB_ENV

      - name: Prepare Lime
        run: haxelib dev lime ${{ github.workspace }}
 
      - name: Rebuild Lime
        run: |
          haxelib run lime rebuild macos -release -64 -nocolor -verbose -nocffi
          haxelib run lime rebuild macos -release -nocolor -verbose -nocffi

      - name: Upload Artifact (x86_64)
        uses: actions/upload-artifact@v4
        with:
          name: Mac64-NDLL
          path: |
            ndll/Mac64/
            !**/.gitignore
            lime.png
          if-no-files-found: error

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Mac-NDLL
          path: |
            ndll/Mac/
            !**/.gitignore
            lime.png
          if-no-files-found: error

  windows:
    runs-on: windows-latest
    steps:

      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: krdlab/setup-haxe@v1
        with:
          haxe-version: ${{ env.HAXE_VERSION }}

      - name: Set HAXEPATH
        run: |
          echo "HAXEPATH=$Env:HAXE_STD_PATH\.." >> $Env:GITHUB_ENV

      - name: Install Haxe dependencies
        run: |
          haxelib git hxcpp https://github.com/MaysLastPlays-Stuff/hxcpp-h --quiet
          haxelib install format --quiet
          haxelib git hxp https://github.com/openfl/hxp --quiet

      - name: Enable HXCPP compile cache
        run: |
          echo "HXCPP_COMPILE_CACHE=C:\.hxcpp" >> $Env:GITHUB_ENV

      - name: Rebuild Lime tools
        run: |
          haxelib dev lime ${{ github.workspace }}
          haxelib run lime rebuild tools -nocolor -verbose -nocffi
          haxelib run lime setup -alias -y -nocffi

      - name: Rebuild Lime (Windows)
        run: |
          lime rebuild windows -32 -release -nocolor -verbose -nocffi
          lime rebuild windows -64 -release -nocolor -verbose -nocffi -eval

      - uses: actions/upload-artifact@v4
        with:
          name: Windows-NDLL
          path: |
            ndll/Windows/
            !**/.gitignore
          if-no-files-found: error

      - uses: actions/upload-artifact@v4
        with:
          name: Windows64-NDLL
          path: |
            ndll/Windows64/
            !**/.gitignore
          if-no-files-found: error

  android:
    runs-on: ubuntu-22.04
    steps:
 
      - uses: actions/checkout@v4
      - uses: krdlab/setup-haxe@v1
        with:
          haxe-version: ${{ env.HAXE_VERSION }}

      - name: Setup Android NDK
        uses: nttld/setup-ndk@main
        id: ndk
        with:
          ndk-version: r15c

      - name: Set HAXEPATH
        run: echo "HAXEPATH=$HAXE_STD_PATH/.." >> $GITHUB_ENV

      - name: Install Haxe dependencies
        run: |
          haxelib git hxcpp https://github.com/MaysLastPlays-Stuff/hxcpp-h --quiet
          haxelib install format --quiet
          haxelib install hxp --quiet

      - name: Enable HXCPP compile cache
        run: echo "HXCPP_COMPILE_CACHE=~/.hxcpp" >> $GITHUB_ENV

      - name: Prepare Lime
        run: |
          haxelib dev lime ${{ github.workspace }}
          haxelib run lime config ANDROID_NDK_ROOT ${{ steps.ndk.outputs.ndk-path }}
          haxelib run lime config ANDROID_SETUP true
      - name: Rebuild Lime
        run: |
          haxelib run lime rebuild android -release -nocolor -nocffi -eval
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Android-NDLL
          path: |
            ndll/Android/
            !**/.gitignore
          if-no-files-found: error

  ios:
    runs-on: macos-15
    steps:

      - uses: actions/checkout@v4
      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: ${{ env.HAXE_VERSION }}

      - name: Set HAXEPATH
        run: echo "HAXEPATH=$HAXE_STD_PATH/.." >> $GITHUB_ENV
 
      - name: Install Haxe dependencies
        run: |
          haxelib git hxcpp https://github.com/MaysLastPlays-Stuff/hxcpp-h --quiet
          haxelib install format --quiet
          haxelib git hxp https://github.com/openfl/hxp --quiet

      - name: Enable HXCPP compile cache
        run: echo "HXCPP_COMPILE_CACHE=~/.hxcpp" >> $GITHUB_ENV
 
      - name: Prepare Lime
        run: haxelib dev lime ${{ github.workspace }}
 
      - name: Rebuild Lime
        run: |
          haxelib run lime rebuild ios -release -nocolor -nocffi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: iPhone-NDLL
          path: |
            ndll/iPhone/
            !**/.gitignore
            lime.png
          if-no-files-found: error

  package-haxelib:
    needs: [linux, macos, windows, android, ios]
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: krdlab/setup-haxe@v1
        with:
          haxe-version: ${{ env.HAXE_VERSION }}

      - name: Set HAXEPATH
        run: |
          echo "HAXEPATH=$HAXE_STD_PATH/.." >> $GITHUB_ENV

      - name: Install Haxe dependencies
        run: |
          haxelib git hxcpp https://github.com/MaysLastPlays-Stuff/hxcpp-h --quiet
          haxelib install format --quiet
          haxelib git hxp https://github.com/openfl/hxp --quiet
          haxelib install svg --quiet
          haxelib install openfl --quiet
          haxelib install dox --quiet

      - name: Enable HXCPP compile cache
        run: |
          echo "HXCPP_COMPILE_CACHE=~/.hxcpp" >> $GITHUB_ENV

      - name: Rebuild Lime tools
        run: |
          haxelib dev lime ${{ github.workspace }}
          haxelib run lime rebuild tools -nocolor -verbose -nocffi
          haxelib run lime setup -alias -y -nocffi
          cp project/lib/hashlink/other/osx/entitlements.xml templates/bin/hl/entitlements.xml


      - name: Download Android NDLLs
        uses: actions/download-artifact@v4
        with:
          name: Android-NDLL
          path: ndll/Android/ 

      - name: Download iPhone NDLLs
        uses: actions/download-artifact@v4
        with:
          name: iPhone-NDLL
          path: ndll/iPhone/

      - name: Download Linux NDLLs
        uses: actions/download-artifact@v4
        with:
          name: Linux-NDLL
          path: ndll/Linux/

      - name: Download Linux64 NDLLs
        uses: actions/download-artifact@v4
        with:
          name: Linux64-NDLL
          path: ndll/Linux64/

      - name: Download Mac NDLLs
        uses: actions/download-artifact@v4
        with:
          name: Mac-NDLL
          path: ndll/Mac/

      - name: Download Mac64 NDLLs
        uses: actions/download-artifact@v4
        with:
          name: Mac64-NDLL
          path: ndll/Mac64/

      - name: Download Windows NDLLs
        uses: actions/download-artifact@v4
        with:
          name: Windows-NDLL
          path: ndll/Windows/

      - name: Rebuild Lime svg.n
        working-directory: tools
        run: |
          haxe svg.hxml

      - uses: actions/upload-artifact@v4
        with:
          name: lime-haxelib
          path: |
            ./
            !project/
            !haxe-*-*/
            !neko-*-*/
            !.git/
          if-no-files-found: error

  docs:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - uses: krdlab/setup-haxe@v1
        with:
          haxe-version: ${{ env.HAXE_VERSION }}

      - name: Set HAXEPATH
        run: |
          echo "HAXEPATH=$HAXE_STD_PATH/.." >> $GITHUB_ENV

      - name: Install Haxe dependencies
        run: |
          haxelib install dox --quiet
          haxelib dev lime ${{ github.workspace }}

      - name: Build docs
        working-directory: docs
        run: |
          haxe build.hxml

      - uses: actions/upload-artifact@v4
        with:
          name: lime-docs
          path: docs/pages
          if-no-files-found: error

  flash-samples:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - uses: krdlab/setup-haxe@v1
        with:
          haxe-version: ${{ env.HAXE_VERSION }}

      - name: Set HAXEPATH
        run: |
          echo "HAXEPATH=$HAXE_STD_PATH/.." >> $GITHUB_ENV

      - name: Install Haxe dependencies
        run: |
          haxelib install format --quiet
          haxelib git hxp https://github.com/openfl/hxp --quiet
          haxelib git lime-samples https://github.com/openfl/lime-samples --quiet

      - name: Prepare Lime
        run: |
          haxelib dev lime ${{ github.workspace }}
          haxelib run lime setup -alias -y -nocffi -eval

  air-samples:
    runs-on: windows-latest
    strategy:
      matrix:
        haxe-version: [4.0.5, 4.1.5, 4.2.5, 4.3.1]
    steps:

      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: krdlab/setup-haxe@v1
        with:
          haxe-version: ${{ matrix.haxe-version }}

      - uses: joshtynjala/setup-adobe-air-action@v2
        with:
          air-version: "33.1"
          accept-license: true

      - name: Set HAXEPATH
        run: |
          echo "HAXEPATH=$Env:HAXE_STD_PATH\.." >> $Env:GITHUB_ENV

      - name: Install Haxe dependencies
        run: |
          haxelib git hxcpp https://github.com/MaysLastPlays-Stuff/hxcpp-h --quiet
          haxelib install format --quiet
          haxelib git hxp https://github.com/openfl/hxp --quiet
          haxelib git lime-samples https://github.com/openfl/lime-samples --quiet

      - name: Prepare Lime
        run: |
          haxelib dev lime ${{ github.workspace }}
          haxelib run lime setup -alias -y -nocffi -eval
          haxelib run lime config AIR_SDK ${{ env.AIR_HOME }} -eval

  hashlink-samples:
    needs: package-haxelib
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-13]
    runs-on: ${{ matrix.os }}
    steps:

      - uses: krdlab/setup-haxe@v1
        with:
          haxe-version: ${{ env.HAXE_VERSION }}

      - name: Set HAXEPATH (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "HAXEPATH=$Env:HAXE_STD_PATH\.." >> $Env:GITHUB_ENV
      - name: Set HAXEPATH (Mac/Linux)
        if: runner.os != 'Windows'
        run: |
          echo "HAXEPATH=$HAXE_STD_PATH/.." >> $GITHUB_ENV

      - name: Install Haxe dependencies
        run: |
          haxelib git lime-samples https://github.com/openfl/lime-samples --quiet

      - uses: actions/download-artifact@v4
        with:
          name: lime-haxelib
          path: lime-haxelib

      - name: Prepare Lime
        run: |
          haxelib dev lime lime-haxelib
          haxelib run lime setup -alias -y -nocffi

  html5-samples:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - uses: krdlab/setup-haxe@v1
        with:
          haxe-version: ${{ env.HAXE_VERSION }}

      - name: Set HAXEPATH
        run: |
          echo "HAXEPATH=$HAXE_STD_PATH/.." >> $GITHUB_ENV

      - name: Install Haxe dependencies
        run: |
          haxelib install format --quiet
          haxelib git hxp https://github.com/openfl/hxp --quiet
          haxelib install genes --quiet
          haxelib git lime-samples https://github.com/openfl/lime-samples --quiet

      - name: Prepare Lime
        run: |
          haxelib dev lime ${{ github.workspace }}
          haxelib run lime setup -alias -y -nocffi -eval

  neko-samples:
    needs: package-haxelib
    strategy:
      matrix:
        haxe-version: [3.4.7, 4.2.5]
        os: [windows-latest, ubuntu-latest, macos-13]
    runs-on: ${{ matrix.os }}
    steps:

      - uses: krdlab/setup-haxe@v1
        with:
          haxe-version: ${{ matrix.haxe-version }}

      - name: Set HAXEPATH (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "HAXEPATH=$Env:HAXE_STD_PATH\.." >> $Env:GITHUB_ENV
      - name: Set HAXEPATH (Mac/Linux)
        if: runner.os != 'Windows'
        run: |
          echo "HAXEPATH=$HAXE_STD_PATH/.." >> $GITHUB_ENV

      - name: Install Haxe dependencies
        run: |
          haxelib git lime-samples https://github.com/openfl/lime-samples --quiet

      - uses: actions/download-artifact@v4
        with:
          name: lime-haxelib
          path: lime-haxelib

      - name: Prepare Lime
        run: |
          haxelib dev lime lime-haxelib
          haxelib run lime setup -alias -y -nocffi

  notify:
    runs-on: ubuntu-latest
    needs: [package-haxelib, docs, android, flash-samples, air-samples, hashlink-samples, html5-samples, ios, linux, macos, neko-samples, windows]
    if: ${{ github.repository == 'openfl/lime' && github.event_name != 'pull_request' }}
    steps:
      - name: Notify Discord
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.github_token }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
